lunch <- read.csv("data/lunch_df_exencoding.csv")
lunch <- read.csv("data/lunch_train_exencoding.csv")
dinner <- read.csv("data/dinner_train_exencoding.csv")
View(dinner)
View(dinner)
#### 1. t-test
# vacation이 Yes/No 일 때 점심, 저녁의 평균, 분산 차이 있나? 통계적으로 유의미한가?
va_yes_avg <- mean(lunch$lunch_number[which(lunch$vacation == "Y")])
va_no_avg <- mean(lunch$lunch_number[lunch$vacation == "N"])
cat(va_yes_avg, ', ', va_no_avg)
va_yes_sd <- sd(lunch$lunch_number[lunch$vacation == "Y"])
va_no_sd <- sd(lunch$lunch_number[lunch$vacation == "N"])
cat(va_yes_sd, ',', va_no_sd)
result = aov(lunch_number ~ vacation, data = lunch)
shapiro.test(resid(result))
#	Kruskal분석(정규분포가 아닐 때)
kruskal.test(lunch_number ~ vacation, data = lunch)
kruskalmc(lunch_number, vacation)
#	p-value : 1.079e-08으로 기각. 통계적으로 유의미한 차이가 있음을 알 수 있다.
library(pgirmess)
kruskalmc(lunch_number, vacation)
kruskalmc(lunch$lunch_number, lunch$vacation)
## 저녁
#
result = aov(dinner_number ~ vacation, data = dinner)
shapiro.test(resid(result))
#	Kruskal분석(정규분포가 아닐 때)
#	p-value : 1.079e-08으로 기각. 통계적으로 유의미한 차이가 있음을 알 수 있다.
kruskal.test(dinner_number ~ vacation, data = dinner)
kruskalmc(dinner$dinner_number, dinner$vacation)
# new menu가 나오는 날일 때 평균, 분산 차이 있나? 통계적으로 유의미한가?
#	정규분포 확인. p-value = 8.484e-06으로 정규분포 아님
result = aov(lunch_number ~ new_lunch, data = lunch)
shapiro.test(resid(result))
kruskal.test(lunch_number ~ new_lunch, data = lunch)
kruskalmc(lunch$lunch_number, lunch$new_lunch)
## 저녁
#	정규분포 확인. p-value = 1.288e-05으로 정규분포 아님
result = aov(dinner_number ~ new_dinner, data = dinner)
shapiro.test(resid(result))
#	Kruskal분석(정규분포가 아닐 때)
#	p-value : 0.2537. 통계적으로 유의미한 차이가 없음.
kruskal.test(dinner_number ~ new_dinner, data = dinner)
kruskalmc(dinner$dinner_number, dinner$new_dinner)
### new menu가 나오는 날일 때 평균, 분산 차이 있나? 통계적으로 유의미한가?
## 점심
#	정규분포 확인. p-value = 1.288e-05으로 정규분포 아님
shapiro.test(lunch$lunch_number[lunch$new_lunch == "Y"])
shapiro.test(lunch$lunch_number[lunch$new_lunch == "N"])
#	정규분포가 아닌 경우
wilcox.test(lunch_number ~ new_lunch, data = lunch)
## 저녁
#	정규분포 확인. p-value < 2.2e-16으로 정규분포 아님
shapiro.test(dinner$dinner_number[dinner$new_dinner == "Y"])
shapiro.test(dinner$dinner_number[dinner$new_dinner == "N"])
#	wilcox test(정규분포가 아닐 때)
#	p-value : 0.2538. 통계적으로 유의미한 차이 없음.
wilcox.test(dinner_number ~ new_dinner, data = dinner)
#### 1. t-test
### vacation이 Yes/No 일 때 점심, 저녁의 평균, 분산 차이 있나? 통계적으로 유의미한가?
## 점심
#	정규분포 확인. 신메뉴가 나왔을 때의 값이 정규분포를 따르지 않음
shapiro.test(lunch$lunch_number[lunch$vacation == "Y"])
shapiro.test(lunch$lunch_number[lunch$vacation == "N"])
#	wilcox test(정규분포가 아닐 때)
#	p-value : 0.2538. 통계적으로 유의미한 차이 없음.
wilcox.test(lunch_number ~ vacation, data = lunch)
## 저녁
#	정규분포 확인. p-value < 2.2e-16으로 정
shapiro.test(dinner$dinner_number[dinner$vacation == "Y"])
shapiro.test(dinner$dinner_number[dinner$vacation == "N"])
#	wilcox test(정규분포가 아닐 때)
#	p-value : 0.5997. 통계적으로 유의미한 차이 없음.
wilcox.test(dinner_number ~ vacation, data = dinner)
#### 2. ANOVA
### 계절별 사내식당 인원 수 차이가 통계적으로 유의미한가?
## 점심
# 	정규분포 확인.
result = aov(lunch_number ~ season, data = lunch)
#### 2. ANOVA
### 계절별 사내식당 인원 수 차이가 통계적으로 유의미한가?
## 점심
# 	정규분포 확인.
result = aov(lunch_number ~ season, data = lunch)
shapiro.test(resid(result))
# Kruskal분석(정규분포가 아닐 때)
kruskal.test(lunch_number ~ season, data = lunch)
library(pgirmess)
kruskalmc(result_column, reason_column)
kruskalmc(lunch$lunch_number, lunch$season)
## 저녁
#	정규분포 확인. p-value = 8.531e-06
result = aov(dinner_number ~ season, data = dinner)
shapiro.test(resid(result))
# Kruskal분석(정규분포가 아닐 때)
kruskal.test(dinner_number ~ season, data = dinner)
kruskalmc(dinner$dinner_number, dinner$season)
### 요일별 사내식당 인원 수 차이가 통계적으로 유의미한가?
## 점심
#	정규분포 확인. p-value = 8.531e-06
result = aov(lunch_number ~ weekdays, data = lunch)
shapiro.test(resid(result))
# Kruskal분석(정규분포가 아닐 때)
kruskal.test(lunch_number ~ weekdays, data = lunch)
kruskalmc(lunch$lunch_number, lunch$weekdays)
## 저녁
#	정규분포 확인. p-value < 2.2e-16
result = aov(dinner_number ~ weekdays, data = dinner)
shapiro.test(resid(result))
# Kruskal분석(정규분포가 아닐 때)
kruskal.test(dinner_number ~ weekdays, data = dinner)
kruskalmc(dinner$dinner_number, dinner$weekdays)
library(leaps)
#### 3. All Subset Regression
### DataFrame 내 모든 변수 중 선형회귀분석에 가장 적합한 변수들은 무엇인지 파악
## 점심
result <- regsubsets(lunch_number ~ ., data = lunch, nbest = 23)
result
plot(result, scale="adjr2")
## 저녁
result <- regsubsets(dinner_number ~ ., data = dinner, nbest = 23)
result
plot(result, scale="adjr2")
#### 3. AIC & All Subset Regression
### DataFrame 내 모든 변수 중 선형회귀분석에 가장 적합한 변수들은 무엇인지 파악
## 점심
# AIC
fit <- lm(lunch_number ~ ., data = lunch)
summary(fit)
